@precedence {prio1, prio2}

@top Program { whitespace* tllisting whitespace* }

tllisting { ( expression | Cmd)  (~ambi whitespace+ (expression | Cmd))* ~ambi}


listing { expression  (~ambi whitespace+ expression)* ~ambi}

expression {
  !prio1 Command |
  !prio1 Repeat |
  !prio1 IfThen |
  !prio2 idx
}

Command { 
  @specialize<idx, "Hinlegen"> |
  @specialize<idx, "Schritt"> | 
  @specialize<idx, "LinksDrehen"> |
  @specialize<idx, "RechtsDrehen"> |
  @specialize<idx, "Aufheben">
}

Repeat {
  RepeatStart whitespace+ (RepeatAlwaysKey | (RepeatWhileKey whitespace+ Condition) | (Times whitespace+ RepeatTimesKey) ) whitespace+ ~ambi listing? whitespace+ RepeatEnd
}

Times {
  number
}

RepeatStart[closedBy="RepeatEnd"] { @specialize<idx, "wiederhole"> }

RepeatEnd { @specialize<idx, "endewiederhole"> }

RepeatAlwaysKey { @specialize<idx, "immer"> }

RepeatWhileKey { @specialize<idx, "solange"> }

RepeatTimesKey { @specialize<idx, "mal"> }

Condition { "IstWand" | "NichtIstWand" | "IstZiegel" | "NichtIstZiegel" }

IfThen {
  IfKey whitespace+ Condition whitespace+ ThenKey whitespace+ ~ambi (listing whitespace+)? (whitespace+ ElseKey whitespace+ ~ambi listing?)? IfEndKey
}

IfKey[closedBy="IfEndKey"] { @specialize<idx, "wenn"> }

ThenKey { @specialize<idx, "dann"> }

IfEndKey { @specialize<idx, "endewenn"> }

ElseKey { @specialize<idx, "sonst"> }

Cmd {
  CmdStart whitespace+ CmdName whitespace+ (listing whitespace+)? CmdEnd
}

CmdName { idx }

CmdStart[closedBy="CmdEnd"] { @specialize<idx, "Anweisung"> }

CmdEnd { @specialize<idx, "endeAnweisung"> }

@tokens {
  whitespace { $[ \n\r\t]+ }

  number { $[0-9]+ }

  Comment { "{" ![}]* "}" }

  idx { $[A-Za-z_]+ $[0-9A-Za-z_]? }

}

@skip { Comment }